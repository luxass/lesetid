---
import type { HTMLAttributes } from "astro/types";

type Platform = "github" | "twitter" | "x" | "linkedin";

export interface Props extends HTMLAttributes<"a"> {
  href: `${Platform}:${string}` | (string & {})
  class?: string
  underline?: boolean
}

let { href, underline = false, class: clazz, ...props } = Astro.props;

if (href.startsWith("github:")) {
  href = `https://github.com/${href.slice(7)}`;
} else if (href.startsWith("twitter:")) {
  href = `https://twitter.com/${href.slice(8)}`;
} else if (href.startsWith("x:")) {
  href = `https://x.com/${href.slice(2)}`;
} else if (href.startsWith("linkedin:")) {
  href = `https://linkedin.com/in/${href.slice(9)}`;
}

const isExternal = href.startsWith("http");
const target = isExternal ? "_blank" : undefined;
const rel = isExternal ? "noopener noreferrer" : undefined;
---

<a
  {href}
  {target}
  {rel}
  {...props}
  class:list={[underline && "underline decoration-neutral-300 underline-offset-4 dark:decoration-neutral-600 hover:(decoration-neutral-400 dark:decoration-neutral-500)", clazz]}
>
  <slot /></a
>
