---
import type { CollectionEntry } from "astro:content"
import { getCollection } from "astro:content"
import PageLayout from "../layouts/PageLayout.astro"
import Notification from "../components/Notification.astro"
import Code from "../components/Code.vue"

export async function getStaticPaths() {
  const posts = await getCollection("posts")
  return posts.map((post) => ({
    params: { handle: post.slug },
    props: { post },
  }))
}

interface Props {
  post: CollectionEntry<"posts">
}

const {
  post: {
    data: { title, description, date, published },
    render,
  },
} = Astro.props

const { Content, remarkPluginFrontmatter } = await render()

export const prerender = true;
---

<PageLayout
  title={title}
  description={description}
  image={`https://image.luxass.dev/api/image/post?input=${encodeURIComponent(
    JSON.stringify({
      title,
      description,
      date,
    }),
  )}`}
>
  <article class="tracking-wide prose">
    {
      !published && (
        <Notification type="important">
          This post is a <strong>draft</strong>. It may be incomplete or contain inaccuracies.
        </Notification>
      )
    }

    <Notification type="note">
      This post will approximately take <strong>{remarkPluginFrontmatter.estimation.text}</strong> to read.
    </Notification>

    <h1 class="mt-8">{title}</h1>
    <Content
      components={{
        code: Code,
      }}
    />
  </article>
</PageLayout>
